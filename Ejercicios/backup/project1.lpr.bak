program project1;
type
  productoPedido=record
    cod:integer;
    cant:integer;
  end;

  lista=^nodo;

  nodo=record
    dato:productoPedido;
    sig:lista;
  end;

  pedido=record
    codP:integer;
    DNI:integer;
    listaProd:lista;
  end;

  listaPedidos=^nodoPedido;

  nodoPedido=record
    dato:pedido;
    sig:listaPedidos;
  end;

  arbol=^nodoArbol;

  nodoArbol=record
    dato:productoPedido;
    HI:arbol;
    HD:arbol;
  end;

  listaNue=^nodoNue;

  nodoNue=record
    cod:integer;
    sig:listaNue;
  end;
procedure cargarLista(var l:listaPedidos);
begin

end;

procedure cargarArbol(var a:arbol);
begin

end;

procedure actualizarStock(l:listaPedidos; a:arbol);
  procedure agregarArbol(var a:arbol; num:integer);
  begin
    if(a=nil)then begin
      new(a);
      nue^.dato.cod:=num;
      nue^.dato.cant:=0;
      nue^.HD:=nil;
      nue^.HI:=nil;
    end
    else
      if(num<a^.dato.cod)then
         agregarArbol(a^.HI,num)
         else
           agregarArbol(a^.HD,num);

  end;
  begin
    if(l<>nil)and(a<>nil)then begin
        if(l^.dato.listaProd^.dato.cod=a^.dato.cod)then
         a^.dato.cant:=a^.dato.cant-l^.dato.listaProd^.dato.cant;
        if(l^.dato.listaProd^.dato.cod<a^.dato.cod)then
            actualizarStock(l,a^.HI);
        else
           actualizarStock(l,a^.HD);

    end;
  end;

procedure devolverLista(var lisNue:listaNue; a:arbol; cod1,cod2:integer);
  procedure agregarLista(var lisNue,num:integer);
  var
    nue:listaNue;
  begin
    new(nue);
    nue^.cod:=num;
    nue^.sig:=lisNue;
    lisNue:=nue;
  end;

begin
  if(a<>nil)then begin
    devolverLista(lisNue,a^.HI,cod1,cod2);
    if(a^.dato.cod>cod1)and(a^.dato.cod<cod2)and(a^.dato.cant=0)then
       agregarLista(lisNue,a^.dato.cod);
    devolverLista(lisNue,a^.HD,cod1,cod2);
  end;
end;

var
  l:listaPedidos;
  a:arbol;
  cod1,cod2:integer;
  lisNue:listaNue;
begin
  cargarLista(l); {se dispone}
  cargarArbol(a); {se dispone}
  actualizarStock(l,a);
  writeln('Escriba dos cÃ³digos de producto');
  readln(cod1); readln(cod2);
  lisNue:=nil;
  devolverLista(lisNue,a,cod1,cod2);



end;

